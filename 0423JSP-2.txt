=============================================================================

@ 회원정보 테이블(로그인용) 

​

 - 테이블이름: login_t

 - 정보의 종류와 타입

 - 이름  ( u_name varchar(20) default 'UnknownUSER' )

 - 아이디 ( u_id varchar(20) default 'UnknownID' PRIMARY KEY)

 - 비밀번호 ( u_pw varchar(20) default 'UnknownPW' )

 - 주소 ( u_addr varchar(50) default 'UnknownADDR' )

​

# 최소 2명의 레코드(정보) 를 저장한다. (한명은 관리자용, 다른한명은 일반유저용)

========================================================

@ 로그인페이지(login.html)

 - 아이디,암호를 입력하고 전송버튼을 누르면 "login.jsp" 페이지로 전송

​

​

@ 로그인처리 페이지(login.jsp)

 - 아이디, 암호를 전송받고 해당유저를 login_t 테이블에서 검색한다.

 - 검색결과가 있으면, 화면에 해당유저의 모든정보를 출력해준다.

 - 검색결과가 없으면, 에러메시지("Unknown User!") 를 출력해준다.

=============================================

@ 로그인에 세션기능적용하기 

# 세션을 접근하는 명령어 

 HttpSession sess = request.getSession();

 sess.setAttribute("세션공간의 이름", 저장될값);

 

# 세션에서 데이터를 가져오는 명령어

 HttpSession sess = request.getSession();

 가져온값 = sess.getAttribute("세션공간의 이름");

==============================================

(1) login.jsp 에서 로그인이 된경우에는, 해당유저의 아이디를 세션공간에 저장해준다.

  - 세션공간의 이름은 "loginUserID"

  - 저장될값은 해당유저의 아이디

​

(2) 세션이 유지되는지 확인하기 위해서, 테스트를 진행한다. (다른 페이지에 접근했을때 세션값을 확인한다)

 - "list.jsp" 페이지에 접속했을때, 해당유저의 세션값(저장된 아이디) 이 출력되도록한다.

 - 만약, 세션값이 없을경우에는 아무것도 출력하지않는다.

==============================================

@ 로그아웃기능 구현하기 

(1) "logout.jsp" 페이지를 만든다. (list.jsp 페이지에 링크걸어줌)

(2) 이 페이지가 실행되면, 현재 저장된 세션을 삭제(소멸) 시킨다.

 HttpSession session = request.getSession();

 session.invalidate( );  [세션소멸]

​

(3) 로그아웃되었다는 메시지를 출력한다.